on_actions = {

	on_startup = {
		effect = {
			every_country = {
				set_variable = { food_surplus = 0 } #food Surplus
				set_variable = { food_mil_consumption_i = mtth:food_mil_consumption } #food Military Consumption - Saved at beginning of each month
				set_variable = { food_civ_core_consumption_i = mtth:food_civ_core_consumption } #food Civilian Core Consumption - Saved at beginning of each month
				set_variable = { food_civ_non_core_consumption_i = mtth:food_civ_non_core_consumption } #food Civilian Non Core Consumption - Saved at beginning of each month
				set_variable = { food_total_consumption_i = mtth:food_total_consumption }
				set_variable = { food_mil_deficit = 0 }
				set_variable = { food_civ_core_deficit = 0 }
				set_variable = { food_civ_non_core_deficit = 0 }
				add_dynamic_modifier = {
					modifier = food_needed_dyn_mod
				}
				set_variable = { manpower_laws_cost = mtth:army_xp_cost_professionnalism }
				set_variable = { manpower_laws_cost_n = mtth:army_xp_cost_professionnalism_n }
			}
		}
	}
	
	on_weekly_NUK = {
		effect = {
			every_country = {
				set_temp_variable = { civ_core_food_modifier_t = 100 }
				subtract_from_temp_variable = { civ_core_food_modifier_t = modifier@civ_core_food_modifier }
				set_temp_variable = { civ_non_core_food_modifier_t = 100 }
				subtract_from_temp_variable = { civ_non_core_food_modifier_t = modifier@civ_non_core_food_modifier }
				if = {
					limit = {
						check_variable = {
							var = resource@food
							value = 0
							compare = greater_than_or_equals
						}
					}
					set_variable = { food_surplus = resource@food }
					set_variable = { food_civ_non_core_deficit = civ_non_core_food_modifier_t }
                    set_variable = { food_civ_core_deficit = civ_core_food_modifier_t }
                    set_variable = { food_mil_deficit = 0 }
				}
				else = {
					set_variable = { food_surplus = 0 }
					set_temp_variable = { food_deficit = resource@food }
					multiply_temp_variable = { food_deficit = -1 }
					if = {
						limit = {
							check_variable = {
								var = food_deficit
								value = food_civ_non_core_consumption_i
								compare = greater_than_or_equals
							}
						}
						set_variable = { food_civ_non_core_deficit = 100 }
						subtract_from_temp_variable = { food_deficit = food_civ_non_core_consumption_i }
						if = {
							limit = {
								check_variable = {
									var = food_deficit
									value = food_civ_core_consumption_i
									compare = greater_than_or_equals
								}
							}
							set_variable = { food_civ_core_deficit = 100 }
							subtract_from_temp_variable = { food_deficit = food_civ_core_consumption_i }
							if = {
								limit = {
									check_variable = {
										var = food_deficit
										value = food_mil_consumption_i
										compare = greater_than_or_equals
									}
								}
								set_variable = { food_mil_deficit = 100 }
							}
							else = {
								divide_temp_variable = { food_deficit = food_mil_consumption_i }
								multiply_temp_variable = { food_deficit = 100 }
								set_variable = { food_mil_deficit = food_deficit }
							}
						}
						else = {
							divide_temp_variable = { food_deficit = food_civ_core_consumption_i }
							multiply_temp_variable = { food_deficit = modifier@civ_core_food_modifier }
							add_to_temp_variable = { food_deficit  = civ_core_food_modifier_t }
							set_variable = { food_civ_core_deficit = food_deficit }
							set_variable = { food_mil_deficit = 0 }
						}
					}
					else = {
						divide_temp_variable = { food_deficit = food_civ_non_core_consumption_i }
						multiply_temp_variable = { food_deficit = modifier@civ_non_core_food_modifier }
						add_to_temp_variable = { food_deficit  = civ_non_core_food_modifier_t }
						set_variable = { food_civ_non_core_deficit = food_deficit }
						set_variable = { food_civ_core_deficit = civ_core_food_modifier_t }
						set_variable = { food_mil_deficit = 0 }
					}
				}
				set_variable = { food_mil_consumption_i = mtth:food_mil_consumption } #food Military Consumption - Saved at beginning of each month
				set_variable = { food_civ_core_consumption_i = mtth:food_civ_core_consumption } #food Civilian Core Consumption - Saved at beginning of each month
				set_variable = { food_civ_non_core_consumption_i = mtth:food_civ_non_core_consumption } #food Civilian Non Core Consumption - Saved at beginning of each month
				set_variable = { food_total_consumption_i = mtth:food_total_consumption }
			}
			every_country = {
				limit = {
					is_ai = yes
					has_resources_in_country = {
						resource = electronics
						amount > 0
					}
					has_political_power > 5
				}
				if = {
					limit = {
						has_tech = massively_parallels_computers
						has_idea = commercial_computers_law
					}
					add_political_power = -5
					add_ideas = massively_parallel_computers_law
				}
				else_if = {
					limit = {
						has_tech = mechanical_quantum_computer
						has_idea = massively_parallel_computers_law
					}
					add_political_power = -5
					add_ideas = petascale_supercomputers_law
				}
				else_if = {
					limit = {
						has_tech = chemical_reaction_networks_computers
						has_idea = petascale_supercomputers_law
					}
					add_political_power = -5
					add_ideas = exascale_supercomputers_law
				}
				else_if = {
					limit = {
						has_tech = nondeterministic_dna_computer
						has_idea = exascale_supercomputers_law
					}
					add_political_power = -5
					add_ideas = zettascale_supercomputers_law
				}
				else_if = {
					limit = {
						has_tech = optical_photonic_computer
						has_idea = zettascale_supercomputers_law
					}
					add_political_power = -5
					add_ideas = yottascale_supercomputers_law
				}
				else_if = {
					limit = {
						has_tech = optical_quantum_computer
						has_idea = yottascale_supercomputers_law
					}
					add_political_power = -5
					add_ideas = quettascale_supercomputers_law
				}
			}
		}
	}
	
}